@tokens {
  space { @whitespace+ }

  Comment { "//" ![\n]* }

  word { $[a-zA-Z_] $[a-zA-Z_0-9]* }

  number { $[0-9]+ ("." $[0-9]+)? }
  string { "\"" (!["\\] | "\\" (![.] | $[.]))* "\"" }
  pattern { "[" ($[ \t\n\r] | $[-x] | $[a-gA-G] $[#b]? ($[0-9] | "10"))* "]" }

  "{" "}"
  "(" ")"
  ","

  "="
  ":"
  "<<"

  "+"
  "-"
  "*"
  "/"

  @precedence { Comment, "/" }
}

@skip { space | Comment }

@detectDelim

kw<term> { @specialize[@name={term}]<word, term> }

@precedence {
  multiply @left,
  plus @left
}

@top Program {
  (Assignment | TrackStatement | MixerStatement)*
}

unit {
  @extend<word, "bpm" | "bars" | "beats" | "s" | "ms" | "hz" | "db">
}

VariableDefinition { word }
VariableName { word }

NumberLiteral { number unit? }
StringLiteral { string }
PatternLiteral { pattern }

Literal {
  NumberLiteral | StringLiteral | PatternLiteral
}

expression {
  "(" expression ")" | "-" expression | Literal | Call | VariableName | BinaryExpression
}

BinaryExpression {
  (expression !plus "+" expression) |
  (expression !plus "-" expression) |
  (expression !multiply "*" expression) |
  (expression !multiply "/" expression)
}

Property {
  PropertyName { word }
  ":"
  expression
}

Assignment {
  VariableDefinition
  "="
  expression
}

Call {
  Callee { word }
  "(" (Property ("," Property)*)? ")"
}

Routing {
  VariableName
  "<<"
  (VariableName "<<")*
  expression
}

TrackStatement {
  kw<"track">
  TrackBlock {
    "{" (Property | SectionStatement)* "}"
  }
}

SectionStatement {
  kw<"section"> VariableDefinition
  kw<"for"> expression
  SectionBlock {
    "{" (Property | Routing)* "}"
  }
}

MixerStatement {
  kw<"mixer">
  MixerBlock {
    "{" (Property | Routing | BusStatement)* "}"
  }
}

BusStatement {
  kw<"bus">
  VariableDefinition
  BusBlock {
    "{" (Property)* "}"
  }
}
